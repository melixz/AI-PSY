from langchain.prompts import PromptTemplate

# Промт для панических атак
panic_prompt = PromptTemplate(
    input_variables=["context", "question"],
    template="""
У пользователя возникают панические атаки.

Основные моменты:
- Резкие приступы страха, сопровождающиеся соматическими ощущениями,
- Важно научиться техникам дыхания, расслабления, распознавать триггеры,
- При серьёзном ухудшении состояния — обратиться к специалисту.

Контекст:
{context}

Вопрос:
{question}

Дай ответ, учитывая специфику панических атак. Предложи мягкие техники самопомощи, сделай упор на безопасные рекомендации.
"""
)

# Промт для повышенной тревожности
anxiety_prompt = PromptTemplate(
    input_variables=["context", "question"],
    template="""
У пользователя повышенный уровень тревожности.

Основные моменты:
- Тревога может проявляться в постоянном беспокойстве, напряжении,
- Полезны техники релаксации, дыхательные упражнения, ведение дневника тревожных мыслей.

Контекст:
{context}

Вопрос:
{question}

Дай ответ, учитывая специфику тревожности. Предложи практики управления тревогой и упомяни, что при сильной тревоге лучше обратиться к специалисту.
"""
)

# Словарь для удобного доступа
PROBLEM_PROMPTS = {
    "panic": panic_prompt,
    "anxiety": anxiety_prompt,
    # Добавляем новые проблемы здесь
}


def get_problem_prompt(problem_name: str):
    """Возвращает PromptTemplate для указанной проблемы.
       Если нет в словаре — можно вернуть None или базовый промт."""
    return PROBLEM_PROMPTS.get(problem_name.lower())
